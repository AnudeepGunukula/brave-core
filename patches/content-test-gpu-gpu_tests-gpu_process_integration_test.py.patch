diff --git a/content/test/gpu/gpu_tests/gpu_process_integration_test.py b/content/test/gpu/gpu_tests/gpu_process_integration_test.py
index 65ef9e7b232858b57c2d767a265a0dfc530883c5..8f47570692622a470cedf7033b55fab0d252b6eb 100644
--- a/content/test/gpu/gpu_tests/gpu_process_integration_test.py
+++ b/content/test/gpu/gpu_tests/gpu_process_integration_test.py
@@ -381,28 +381,22 @@ class GpuProcessIntegrationTest(gpu_integration_test.GpuIntegrationTest):
       self.fail('GPU process not detected')
 
   def _GpuProcess_disable_gpu_and_swiftshader(self, test_path):
-    # Disable SwiftShader, so GPU process should not launch anywhere.
+    # Disable SwiftShader, GPU process should launch for display compositing.
     self.RestartBrowserIfNecessaryWithArgs(
         [cba.DISABLE_GPU, cba.DISABLE_SOFTWARE_RASTERIZER])
     self._NavigateAndWait(test_path)
-
-    # Windows will run the display compositor in the browser process if
-    # accelerated GL and Swiftshader are both disabled.
-    should_have_gpu_process = sys.platform != 'win32'
     has_gpu_process = self.tab.EvaluateJavaScript(
         'chrome.gpuBenchmarking.hasGpuProcess()')
-
-    if should_have_gpu_process and not has_gpu_process:
+    if not has_gpu_process:
       self.fail('GPU process not detected')
-    elif not should_have_gpu_process and has_gpu_process:
-      self.fail('GPU process detected')
 
   def _GpuProcess_disable_swiftshader(self, test_path):
     # Disable SwiftShader, GPU process should be able to launch.
     self.RestartBrowserIfNecessaryWithArgs([cba.DISABLE_SOFTWARE_RASTERIZER])
     self._NavigateAndWait(test_path)
-    if not self.tab.EvaluateJavaScript(
-        'chrome.gpuBenchmarking.hasGpuProcess()'):
+    has_gpu_process = self.tab.EvaluateJavaScript(
+        'chrome.gpuBenchmarking.hasGpuProcess()')
+    if not has_gpu_process:
       self.fail('GPU process not detected')
 
   def _GpuProcess_disabling_workarounds_works(self, test_path):
